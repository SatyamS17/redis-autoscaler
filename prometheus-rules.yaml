apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: redis-per-pod-metrics
  namespace: monitoring
spec:
  groups:
  # Per-pod resource usage
  - name: redis-per-pod-resources
    interval: 15s
    rules:
    - record: redis:cpu_percent:by_pod
      expr: |
        sum(rate(container_cpu_usage_seconds_total{pod=~"redis-redis-cluster-.*",container="redis-redis-cluster"}[1m])) by (pod) * 100
      labels:
        metric_type: "cpu"

    - record: redis:memory_used_mb:by_pod
      expr: |
        sum(container_memory_working_set_bytes{pod=~"redis-redis-cluster-.*",container="redis-redis-cluster"}) by (pod) / 1024 / 1024
      labels:
        metric_type: "memory"

  # Cluster-wide aggregates
  - name: redis-cluster-aggregates
    interval: 15s
    rules:
    - record: redis:avg_cpu_percent:cluster
      expr: avg(redis:cpu_percent:by_pod)
      labels:
        metric_type: "cluster_aggregate"

    - record: redis:max_cpu_percent:cluster
      expr: max(redis:cpu_percent:by_pod)
      labels:
        metric_type: "cluster_aggregate"

    - record: redis:total_memory_mb:cluster
      expr: sum(redis:memory_used_mb:by_pod)
      labels:
        metric_type: "cluster_aggregate"

  # Load classification based only on CPU/memory
  - name: redis-load-classification
    interval: 15s
    rules:
    # Classify pod as CPU constrained (> 12%)
    - record: redis:is_cpu_constrained:by_pod
      expr: redis:cpu_percent:by_pod > 12
      labels:
        metric_type: "classification"

    # Classify pod as memory constrained (> 80%)
    - record: redis:is_memory_constrained:by_pod
      expr: redis:memory_used_mb:by_pod / (1024 * 1024) > 80  # optional: adjust if you know pod memory limits
      labels:
        metric_type: "classification"

    # High load indicator (CPU or memory)
    - record: redis:is_high_load:by_pod
      expr: |
        (redis:cpu_percent:by_pod > 12) 
        or 
        (redis:memory_used_mb:by_pod / (1024 * 1024) > 80)
      labels:
        metric_type: "classification"
